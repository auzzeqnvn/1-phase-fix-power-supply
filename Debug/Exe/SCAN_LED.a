;#include "scan_led.h"
;#include "SPI_SOFTWARE.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $00000009 VOL: 0
	#endif
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 0
;
;unsigned char   Uc_led_count = 1;

	.DSEG
;unsigned char   Uc_led_data = 0;
;unsigned int    Uint_data_led1 = 0;
;unsigned int    Uint_data_led2 = 0;
;unsigned int    Uint_data_led3 = 0;
;unsigned char   Uc_Select_led=1;
;
;unsigned char   BCDLED[11]={0xB7,0x81,0x3D,0xAD,0x8B,0xAE,0xBE,0x85,0xBF,0xAF,0};
;
;/* Day du lieu quet led qua duong spi_software
;Co tháº» day tu 1 den 3 byte du lieu.
;Du lieu sau khi day ra day du moi tien hanh xuat du lieu
;num_bytes : so byte duoc day ra
;data_first : du lieu dau tien
;data_second: du lieu thu 2
;data_third ; du lieu thu 3
;*/
;void    SEND_DATA_LED(unsigned char num_bytes,unsigned char  byte_first,unsigned char  byte_second,unsigned char  byte_t ...
; 0002 0016 {

	.CSEG
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
; 0002 0017     unsigned char   i;
; 0002 0018     unsigned char   data[4];
; 0002 0019     for(i=0;i<4;i++)    data[i] = 0;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	num_bytes -> Y+8
;	byte_first -> Y+7
;	byte_second -> Y+6
;	byte_third -> Y+5
;	i -> R17
;	data -> Y+1
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0002 001A data[0] = byte_first;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0002 001B     data[1] = byte_second;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0002 001C     data[2] = byte_third;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0002 001D 
; 0002 001E     for(i=0;i<(num_bytes - 1);i++)    SPI_SENDBYTE(data[i],0);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0002 001F SPI_SENDBYTE(data[i],1);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0002 0020 }
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;
;
;/*
;Ham quet led
;num_led: Thu tu led
;data: Du lieu hien thi tren led.
;*/
;void    SCAN_LED(void)
; 0002 0029 {
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0002 002A     unsigned char   byte1,byte2,byte3;
; 0002 002B     unsigned char    data;
; 0002 002C     unsigned char   bit_left;
; 0002 002D     bit_left = 0x01;
;PCODE: $00000054 VOL: 0
;	byte1 -> R17
;	byte2 -> R16
;	byte3 -> R19
;	data -> R18
;	bit_left -> R21
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0002 002E     byte1 = 0;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0002 002F     byte2 = 0;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0002 0030     byte3 = 0;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0002 0031     //byte1 |= BCDLED[data];
; 0002 0032 
; 0002 0033     Uc_Select_led++;
;PCODE: $0000005D VOL: 0
; 0002 0034     bit_left <<= (Uc_Select_led-1);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0002 0035     if(Uc_Select_led > 8)
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0002 0036     {
; 0002 0037         Uc_Select_led = 1;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0002 0038         bit_left = 0x01;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0002 0039     }
; 0002 003A     /* 7-seg 1*/
; 0002 003B     data = Uint_data_led1/1000;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0002 003C     byte1 = BCDLED[data];
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0002 003D     if(byte1 & bit_left) byte3 |= 0x01;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0002 003E     data = Uint_data_led1/100%10;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0002 003F     byte1 = BCDLED[data];
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0002 0040     if(byte1 & bit_left) byte3 |= 0x02;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0002 0041     data = Uint_data_led1/10%10;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0002 0042     byte1 = BCDLED[data];
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0002 0043     byte1 |= 0x40;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0002 0044     if(byte1 & bit_left) byte3 |= 0x04;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0002 0045     data = Uint_data_led1%10;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0002 0046     byte1 = BCDLED[data];
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0002 0047     if(byte1 & bit_left) byte3 |= 0x08;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0002 0048     /* 7-seg 2 */
; 0002 0049     data = Uint_data_led2/1000;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0002 004A     byte1 = BCDLED[data];
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0002 004B     if(byte1 & bit_left) byte3 |= 0x80;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0002 004C     data = Uint_data_led2/100%10;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0002 004D     byte1 = BCDLED[data];
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0002 004E     byte1 |= 0x40;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0002 004F     if(byte1 & bit_left) byte3 |= 0x40;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0002 0050     data = Uint_data_led2/10%10;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0002 0051     byte1 = BCDLED[data];
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0002 0052     if(byte1 & bit_left) byte3 |= 0x20;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0002 0053     data = Uint_data_led2%10;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0002 0054     byte1 = BCDLED[data];
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0002 0055     if(byte1 & bit_left) byte3 |= 0x10;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0002 0056 
; 0002 0057     SEND_DATA_LED(2,bit_left,byte3,byte2);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0002 0058 }
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;
;
;void    SELECT_LED(unsigned char num_led,unsigned char    data)
; 0002 005C {
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0002 005D     unsigned char   byte1,byte2,byte3;
; 0002 005E     byte1 = 0;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;	num_led -> Y+5
;	data -> Y+4
;	byte1 -> R17
;	byte2 -> R16
;	byte3 -> R19
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0002 005F     byte2 = 0;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0002 0060     byte3 = 0;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0002 0061     switch(num_led)
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0002 0062     {
; 0002 0063         case    1:
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0002 0064         {
; 0002 0065             byte3 = 0x01;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0002 0066             byte2 = 0x01;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0002 0067             break;
;PCODE: $00000107 VOL: 0
; 0002 0068         }
; 0002 0069         case    2:
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0002 006A         {
; 0002 006B             byte3 = 0x02;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0002 006C             byte2 = 0x02;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0002 006D             //byte1 = 0x04;
; 0002 006E             break;
;PCODE: $0000010F VOL: 0
; 0002 006F         }
; 0002 0070         case    3:
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0002 0071         {
; 0002 0072             byte3 = 0x04;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0002 0073             byte2 = 0x04;
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0002 0074             byte1 = 0x40;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0002 0075             break;
;PCODE: $00000119 VOL: 0
; 0002 0076         }
; 0002 0077         case    4:
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0002 0078         {
; 0002 0079             byte3 = 0x08;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0002 007A             byte2 = 0x08;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0002 007B             break;
;PCODE: $00000121 VOL: 0
; 0002 007C         }
; 0002 007D         case    5:
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0002 007E         {
; 0002 007F             byte3 = 0x40;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0002 0080             byte2 = 0x80;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0002 0081             break;
;PCODE: $00000129 VOL: 0
; 0002 0082         }
; 0002 0083         case    6:
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0002 0084         {
; 0002 0085             byte3 = 0x20;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0002 0086             byte2 = 0x40;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0002 0087             byte1 = 0x40;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0002 0088             break;
;PCODE: $00000133 VOL: 0
; 0002 0089         }
; 0002 008A         case    7:
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0002 008B         {
; 0002 008C             byte3 = 0x10;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0002 008D             byte2 = 0x20;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0002 008E             break;
;PCODE: $0000013B VOL: 0
; 0002 008F         }
; 0002 0090         case    8:
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0002 0091         {
; 0002 0092             byte3 = 0x80;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0002 0093             byte2 = 0x10;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0002 0094             break;
;PCODE: $00000143 VOL: 0
; 0002 0095         }
; 0002 0096         case    9:
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0002 0097         {
; 0002 0098             byte3 = 0x00;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0002 0099             byte2 = 0x40;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0002 009A             break;
;PCODE: $0000014B VOL: 0
; 0002 009B         }
; 0002 009C         case    10:
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0002 009D         {
; 0002 009E             byte3 = 0x00;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0002 009F             byte2 = 0x20;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0002 00A0             byte1 = 0x04;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0002 00A1             break;
;PCODE: $00000155 VOL: 0
; 0002 00A2         }
; 0002 00A3         case    11:
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0002 00A4         {
; 0002 00A5             byte3 = 0x00;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0002 00A6             byte2 = 0x10;
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0002 00A7             break;
;PCODE: $0000015D VOL: 0
; 0002 00A8         }
; 0002 00A9         case    12:
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0002 00AA         {
; 0002 00AB             byte3 = 0x00;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0002 00AC             byte2 = 0x80;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0002 00AD             break;
;PCODE: $00000165 VOL: 0
; 0002 00AE         }
; 0002 00AF     }
;PCODE: $00000166 VOL: 0
; 0002 00B0     switch(data)
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0002 00B1     {
; 0002 00B2         case    0:
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0002 00B3         {
; 0002 00B4             byte1 |= 0xB7;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0002 00B5             break;
;PCODE: $0000016D VOL: 0
; 0002 00B6         }
; 0002 00B7         case    1:
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0002 00B8         {
; 0002 00B9             byte1 |= 0x81;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0002 00BA             break;
;PCODE: $00000173 VOL: 0
; 0002 00BB         }
; 0002 00BC         case    2:
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0002 00BD         {
; 0002 00BE             byte1 |= 0x3D;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0002 00BF             break;
;PCODE: $00000179 VOL: 0
; 0002 00C0         }
; 0002 00C1         case    3:
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0002 00C2         {
; 0002 00C3             byte1 |= 0xAD;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0002 00C4             break;
;PCODE: $0000017F VOL: 0
; 0002 00C5         }
; 0002 00C6         case    4:
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0002 00C7         {
; 0002 00C8             byte1 |= 0x8B;
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0002 00C9             break;
;PCODE: $00000185 VOL: 0
; 0002 00CA         }
; 0002 00CB         case    5:
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0002 00CC         {
; 0002 00CD             byte1 |= 0xAE;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0002 00CE             break;
;PCODE: $0000018B VOL: 0
; 0002 00CF         }
; 0002 00D0         case    6:
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0002 00D1         {
; 0002 00D2             byte1 |= 0xBE;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0002 00D3             break;
;PCODE: $00000191 VOL: 0
; 0002 00D4         }
; 0002 00D5         case    7:
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0002 00D6         {
; 0002 00D7             byte1 |= 0x85;
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0002 00D8             break;
;PCODE: $00000197 VOL: 0
; 0002 00D9         }
; 0002 00DA         case    8:
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0002 00DB         {
; 0002 00DC             byte1 |= 0xBF;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0002 00DD             break;
;PCODE: $0000019D VOL: 0
; 0002 00DE         }
; 0002 00DF         case    9:
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0002 00E0         {
; 0002 00E1             byte1 |= 0xAF;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0002 00E2             break;
;PCODE: $000001A3 VOL: 0
; 0002 00E3         }
; 0002 00E4     }
;PCODE: $000001A4 VOL: 0
; 0002 00E5     SEND_DATA_LED(2,byte1,byte2,byte3);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0002 00E6 }
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;
;// void SCAN_LED(void)
;// {
;//     if(Uc_led_count == 1)   Uc_led_data = Uint_data_led1/1000;
;//     else if(Uc_led_count == 2)   Uc_led_data = (Uint_data_led1/100)%10;
;//     else if(Uc_led_count == 3)   Uc_led_data = (Uint_data_led1/10)%10;
;//     else if(Uc_led_count == 4)   Uc_led_data = (Uint_data_led1%10);
;//     else if(Uc_led_count == 5)   Uc_led_data = Uint_data_led2/1000;
;//     else if(Uc_led_count == 6)   Uc_led_data = (Uint_data_led2/100)%10;
;//     else if(Uc_led_count == 7)   Uc_led_data = (Uint_data_led2/10)%10;
;//     else if(Uc_led_count == 8)   Uc_led_data = (Uint_data_led2%10);
;//     else if(Uc_led_count == 9)   Uc_led_data = Uint_data_led3/1000;
;//     else if(Uc_led_count == 10)   Uc_led_data = (Uint_data_led3/100)%10;
;//     else if(Uc_led_count == 11)   Uc_led_data = (Uint_data_led3/10)%10;
;//     else if(Uc_led_count == 12)   Uc_led_data = (Uint_data_led3%10);
;//     SELECT_LED(Uc_led_count,Uc_led_data);
;//     Uc_led_count++;
;//     if(Uc_led_count > NUM_LED_SCAN*4)    Uc_led_count = 1;
;// }
